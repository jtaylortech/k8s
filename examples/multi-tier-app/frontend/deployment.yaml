apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: app
data:
  nginx.conf: |
    server {
      listen 80;
      location / {
        return 200 'Frontend v1.0 - OK\n';
        add_header Content-Type text/plain;
      }
      location /api {
        proxy_pass http://backend:8080;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: app
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
        app: web
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
      containers:
      - name: nginx
        image: nginx:1.25-alpine
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 2
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: frontend-config
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: app
  labels:
    tier: frontend
spec:
  selector:
    tier: frontend
  ports:
  - port: 80
    targetPort: 80
